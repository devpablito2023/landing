# Dockerfile.frontend

# --- Etapa de Build ---
# Usamos una imagen de Node para construir los archivos estáticos del frontend
FROM node:18-alpine AS builder
WORKDIR /app

# Copiamos package.json y pnpm-lock.yaml (o package-lock.json si usas npm)
COPY package.json pnpm-lock.yaml* ./

# Instalamos dependencias (pnpm es eficiente, pero si usas npm, cambia la línea)
RUN npm install

# Copiamos el resto del código fuente
COPY . .

# Ejecutamos el script de build de Vite
RUN npm run build

# --- Etapa de Producción ---
# Usamos una imagen de Nginx súper ligera para servir el contenido
FROM nginx:stable-alpine
WORKDIR /usr/share/nginx/html

# Borramos el contenido por defecto de Nginx
RUN rm -rf ./*

# Copiamos los archivos construidos desde la etapa 'builder'
COPY --from=builder /app/dist .

# Copiamos tu configuración de Nginx para manejar el enrutamiento de React
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Exponemos el puerto 80 del contenedor
EXPOSE 80

# Comando para iniciar Nginx
CMD ["nginx", "-g", "daemon off;"]
